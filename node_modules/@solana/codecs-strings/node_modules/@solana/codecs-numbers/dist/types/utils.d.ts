import { Decoder, Encoder } from '@solana/codecs-core';
import { NumberCodecOptions, SingleByteNumberCodecOptions } from './common';
type NumberFactorySharedInput = {
    name: string;
    size: number;
    options: SingleByteNumberCodecOptions | NumberCodecOptions;
};
type NumberFactoryEncoderInput<T> = NumberFactorySharedInput & {
    range?: [number | bigint, number | bigint];
    set: (view: DataView, value: T, littleEndian?: boolean) => void;
};
type NumberFactoryDecoderInput<T> = NumberFactorySharedInput & {
    get: (view: DataView, littleEndian?: boolean) => T;
};
export declare function numberEncoderFactory<T extends number | bigint>(input: NumberFactoryEncoderInput<T>): Encoder<T>;
export declare function numberDecoderFactory<T extends number | bigint>(input: NumberFactoryDecoderInput<T>): Decoder<T>;
export {};
//# sourceMappingURL=utils.d.ts.map