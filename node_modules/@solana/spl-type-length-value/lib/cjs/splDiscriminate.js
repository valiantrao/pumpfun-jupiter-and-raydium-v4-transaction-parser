"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.splDiscriminate = splDiscriminate;
const assertions_1 = require("@solana/assertions");
function splDiscriminate(discriminator_1) {
    return __awaiter(this, arguments, void 0, function* (discriminator, length = 8) {
        (0, assertions_1.assertDigestCapabilityIsAvailable)();
        const bytes = new TextEncoder().encode(discriminator);
        const digest = yield crypto.subtle.digest('SHA-256', bytes);
        return new Uint8Array(digest).subarray(0, length);
    });
}
//# sourceMappingURL=splDiscriminate.js.map